(()=>{"use strict";const t=t=>({data:t,prev:null,next:null,initialized:!1});console.log((()=>{const e=t([3,3]);e.initialized=!0;const n=()=>e,r=(()=>{const e=[];let n=0;for(let r=0;r<8;r+=1){let r=0;for(let o=0;o<8;o+=1){const o=[];o.push(n),o.push(r),e.push(t(o)),r+=1}n+=1}return e})(),o=()=>r,s=t=>{for(let e=0;e<o().length;e+=1){const n=o()[e];if(console.log(`retrivedNode ${n.data}`),console.log(`compare data: ${t}`),JSON.stringify(t)===JSON.stringify(n.data))return n.initialized=!0,n}return null},l=(t=[n()])=>{if((()=>{for(let t=0;t<o().length;t+=1)if(!o()[t].initialized)return!1;return!0})())return n();const e=t.shift(),r=(t=>{const e=t[0],n=t[1],r=[];return e+2<=7&&(n+1<=7&&r.push([e+2,n+1]),n-1>=0&&r.push([e+2,n-1])),e+1<=7&&(n+1<=7&&r.push([e+1,n+1]),n-1>=0&&r.push([e+1,n-1])),e-1>=0&&(n+1<=7&&r.push([e-1,n+1]),n-1>=0&&r.push([e-1,n-1])),e-2>=0&&(n+1<=7&&r.push([e-2,n+1]),n-1>=0&&r.push([e-2,n-1])),r})(e.data);for(let n=0;n<r.length;n+=1){const o=s(r[n]);console.log(`NEIGHBOR NODE: ${o}`),e.next=o,o.prev=e,t.push(o)}return l(t)};return{getHead:n,retrieveNode:s,connect:l}})().connect())})();
(()=>{"use strict";const t=t=>({data:t,prev:null,next:null,c1:null,c2:null,c3:null,c4:null,c5:null,c6:null,c7:null,c8:null,parent:null});let n=(()=>{const n=t([3,3]),e=()=>n,l=(()=>{const n=[];let e=0;for(let l=0;l<8;l+=1){let l=0;for(let r=0;r<8;r+=1){const r=[];r.push(e),r.push(l),n.push(t(r)),l+=1}e+=1}return n})(),r=()=>l,s=(n=[e()],l=[])=>{function r(){const t=[];for(let e=0;e<n.length;e+=1)t.push(n[e].data);return t}let u,o=l;if(0===n.length)return e();const c=n.pop();o.push(JSON.stringify(c.data));const a=(t=>{const n=t[0],e=t[1],l=[];return n+2<=7&&(e+1<=7&&l.push([n+2,e+1]),e-1>=0&&l.push([n+2,e-1])),n+1<=7&&(e+2<=7&&l.push([n+1,e+2]),e-2>=0&&l.push([n+1,e-2])),n-1>=0&&(e+2<=7&&l.push([n-1,e+2]),e-2>=0&&l.push([n-1,e-2])),n-2>=0&&(e+1<=7&&l.push([n-2,e+1]),e-1>=0&&l.push([n-2,e-1])),l})(c.data),i=[];for(let n=0;n<a.length;n+=1){const e=t(a[n]);i.push(e)}if(function(t,n){for(let e=0;e<n.length;e+=1)if(!t.includes(JSON.stringify(n[e].data)))return!1;return!0}(o,i))return o=[JSON.stringify(e().data)],u=r(),console.log(`stackData when ancestorList is reset: ${u}`),s(n,o);let f=1;for(let t=0;t<i.length;t+=1)if(!o.includes(JSON.stringify(i[t].data))){for(;null!==c[`c${f}`];)f+=1;c[`c${f}`]=i[t],n.push(i[t]),u=r(),console.log(`stackData after pushing retrieved node to put in child ${f} of ${c.data}: ${u}`)}return u=r(),console.log(`stackData after final return: ${u}`),s(n,o)};return s(),{getHead:e,retrieveNode:t=>{for(let n=0;n<r().length;n+=1){const e=r()[n];if(JSON.stringify(t)===JSON.stringify(e.data))return e}return null},getNodeList:r}})().getHead();for(;null!==n;)console.log(n),n=n.c1})();